#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && ${tg_tags} !!- ,notify_none, && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
buflist_buffer_scroll.arguments = "buflist_buffer_scroll"
buflist_buffer_scroll.command = "/mute /buffer_autoset add ${full_name} localvar_set_start_at ${my_start_at}"
buflist_buffer_scroll.conditions = "${_key} =~ -wheeldown$ || ${buffer[${pointer}].local_variables.start_at} !="
buflist_buffer_scroll.enabled = on
buflist_buffer_scroll.hook = hsignal
buflist_buffer_scroll.post_action = none
buflist_buffer_scroll.regex = "/.*/${if:${buffer[${pointer}].local_variables.start_at}==?0:${buffer[${pointer}].local_variables.start_at}}/my_start_at /.*/${calc:${my_start_at}${if:${_key}=~up&&${my_start_at}!=?-:+}1}/my_start_at"
buflist_buffer_scroll.return_code = ok
buflist_fold_symbol_click.arguments = "1001|buflist_mouse"
buflist_fold_symbol_click.command = "/toggle_bufautoset localvar_set_fold ${full_name}"
buflist_fold_symbol_click.conditions = "${localvar_type} == server && ${plugins.var.buflist.item.fold} != && (${plugins.var.buflist.item.buffer_number} != && ${_bar_item_col} == ${lengthscr:${buffer[last_gui_buffer].number}.} || ${plugins.var.buflist.item.buffer_number} == && ${_bar_item_col} == 0)"
buflist_fold_symbol_click.enabled = on
buflist_fold_symbol_click.hook = hsignal
buflist_fold_symbol_click.post_action = none
buflist_fold_symbol_click.regex = ""
buflist_fold_symbol_click.return_code = ok_eat
buflist_refresh_options.arguments = "weechat.bar.buflist.size*;plugins.var.buflist.*"
buflist_refresh_options.command = "/buflist refresh"
buflist_refresh_options.conditions = ""
buflist_refresh_options.enabled = on
buflist_refresh_options.hook = config
buflist_refresh_options.post_action = none
buflist_refresh_options.regex = ""
buflist_refresh_options.return_code = ok
buflist_resize.arguments = "buflist_resize"
buflist_resize.command = "/mute /set plugins.var.buflist.section.${my_modified_section}.size ${my_modified_section_size};/bar set ${_bar_name} size ${my_new_bar_size}"
buflist_resize.conditions = "${_key}=~down || ${_key}=~up && (${_bar_item_col} < ${plugins.var.buflist.section.left.size} && ${plugins.var.buflist.section.left.size} > 1 || ${_bar_item_col} >= ${plugins.var.buflist.section.left.size} && ${plugins.var.buflist.section.right.size} > 1)"
buflist_resize.enabled = on
buflist_resize.hook = hsignal
buflist_resize.post_action = none
buflist_resize.regex = "/.*/${if:${_key}=~up$?-:+}/my_action /.*/${if:${_bar_item_col}<${plugins.var.buflist.section.left.size}?left:right}/my_modified_section /.*/${calc:${plugins.var.buflist.section.${my_modified_section}.size} ${my_action} 1}/my_modified_section_size /.*/${if:${weechat.bar.${_bar_name}.size}!=?${calc:${weechat.bar.${_bar_name}.size} ${my_action} 1}:0}/my_new_bar_size"
buflist_resize.return_code = ok
buflist_tools.arguments = "buflist_tools;manage pascalpoitras's custom buflist (https://gist.github.com/pascalpoitras/8406501);resize <buflist_size> <left_size>|? [<right_size>] || item hide|show|toggle|showonly|hideonly <item>|-old|-new|-all [<item>|-old|-new|-all...] || look enable|disable|toggle <option> [<option>...];             resize: resize the buflist size and the two sections${\n}    item hide: hide one or more item(s)${\n}    item show: show one or more item(s)${\n}  item toggle: toggle one or more item(s)${\n}item showonly: hide all items except...${\n}item hideonly: show all items except...${\n}        look enable: enable an option that change the behavior of the buflist${\n}       look disable: disable an option that change the behavior of the buflist${\n}        look toggle: toggle an option that change the behavior of the buflist${\n}       buflist_size: new size for the buflist${\n}   left_size: size of left section${\n}   right_size: size of right section${\n}         item: an item (buffer_number, fold, indent, nick_prefix, buffer_name, lag, filter, relay_count, extra, hotlist)${\n}               -old: only the old buflist items (buffer_number, indent, buffer_name, filter, relay_count, extra, hotlist)${\n}               -new: only the new buflist items (fold, nick_prefix, lag)${\n}               -all: do action on all items${\n}             option: an option (indent_tree, real_net_name, show_hidden_buffers)${\n}${\n}The buflist is composed of two sections. The left section is composed of nine items. The buffer number, the fold symbol (servers only), the indentation, the nick prefix (channels only), the buffer name, the lag (servers only), the filter (on some buffer like fset, scripts...), the relay count (for the relay buffer) and extra infos about a buffer. The right section is only composed of hotlist. The two sections can be resized independently. If you want to hide an item, for example, buffer_number, the bar will not be resized and the section will not be resized too. So you will have more space for the other item of the left section. If you want to hide the hotlist, you can use the hide command but then the right section will be empty and use space for nothing, space that cant be used by the left section. So if you want to hide the hotlist, you'd be better off using resize and give all the spaces to the left section. TLDR if you're not gonna use the hotlist, do not reserve space for it in the first place.${\n}${\n}Exemples:${\n}  Resize the bar to 20 with the size 15 for left section and 5 for right section:${\n}    /buflist_tools resize 20 15${\n}  Show only the items that was available in the old buflist:${\n}    /buflist_tools item showonly -old;resize 25 || item show|hide|toggle|hideonly|showonly buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-old|-new|-all|%* || look enable|disable|toggle indent_tree|real_net_name|show_hidden_buffers|%*"
buflist_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
buflist_tools.conditions = "${tg_argv_eol1} =~ ^resize +[0-9]+ +([0-9]+( +[0-9]+)?|\? +[0-9]+)$ || ${tg_argv_eol1} =~ ^item +(hide|show|toggle|showonly|hideonly) +((buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-old|-new|-all)( +|$))+$ || ${tg_argv_eol1} =~ ^look +(enable|disable|toggle) +((indent_tree|real_net_name|show_hidden_buffers)( +|$))+$"
buflist_tools.enabled = on
buflist_tools.hook = command
buflist_tools.post_action = none
buflist_tools.regex = "/.*/${tg_argv1}/my_command /.*/${if:${tg_argv1}==resize?resize:${tg_argv2}}/my_action /.*/${if:${my_action}==resize?${tg_argv_eol2}}/my_resize_cmds ===^([^ ]+) +([^ ]+)( +([^ ]+))?$===/mute /set plugins.var.buflist.section.left.size ${if:${re:2}=~[0-9]+?${re:2}:${calc:${re:1}-${re:4}}};/mute /set plugins.var.buflist.section.right.size ${if:${re:4}=~[0-9]+?${re:4}:${calc:${re:1}-${re:2}}};/bar set buflist size ${re:1}===my_resize_cmds /.*/${if:${my_command}==item?${tg_argv_eol3}}/my_item_cmds /-all/-new -old/my_item_cmds /-old/buffer_number indent buffer_name filter relay_count extra hotlist/my_item_cmds /-new/fold nick_prefix lag/my_item_cmds /.*/${if:${my_action}=~^(hide|show)only$?buffer_number fold indent nick_prefix buffer_name lag filter relay_count extra hotlist}/my_hide_or_show_everything ===buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist===/mute /set plugins.var.buflist.item.${re:0} ${if:${my_action}==hideonly};===my_hide_or_show_everything ===buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist===/mute /set plugins.var.buflist.item.${re:0} ${if:${my_action}=~^hide?0:${if:${my_action}=~^show?1:\x5c${if:\x5c${plugins.var.buflist.item.${re:0}${\x5cx7d}?0:1${\x5cx7d}}};===my_item_cmds /.*/${my_hide_or_show_everything}${re:0}/my_item_cmds /.*/${if:${my_command}==look?${tg_argv_eol3}}/my_look_cmds ===indent_tree|real_net_name|show_hidden_buffers===/mute /set plugins.var.buflist.look.${re:0} ${if:${my_action}==disable?0:${if:${my_action}==enable?1:${if:${plugins.var.buflist.look.${re:0}}!=?0:1}}};===my_look_cmds /.*/${my_resize_cmds}${my_item_cmds}${my_look_cmds}/my_cmds_to_run"
buflist_tools.return_code = ok
chanmon.arguments = "*;irc_privmsg,matrix_message,matrix_text"
chanmon.command = "/print -newbuffer ${tg_trigger_name} -tags ${tg_tags} \t${my_list}${tg_message}"
chanmon.conditions = "${info:version_number} >= 50462720 && ${buffer.local_variables.type} == channel && ${buffer.local_variables.no_${tg_trigger_name}_like} == && (${plugins.var.${tg_trigger_name}.look.filtered_lines} != || ${plugins.var.${tg_trigger_name}.look.filtered_lines} == && ${tg_displayed} !=) && (${plugins.var.${tg_trigger_name}.look.hidden_channels} != || ${plugins.var.${tg_trigger_name}.look.hidden_channels} == && ${buffer.hidden} ==)"
chanmon.enabled = on
chanmon.hook = print
chanmon.post_action = none
chanmon.regex = "/.*/${if:${buffer.local_variables.script_name}==matrix||${buffer.local_variables.plugin}==matrix?nick_${base_encode:64,${tg_tag_nick}}:${tg_tags}}/tg_tags /.*/${tg_date}/my_date_only /(.*) .*/${re:1}/my_date_only /.*/${tg_date}/my_time_only /.* (.*)/${re:1}/my_time_only /.*/${buffer.short_name}/my_channel_no_prefix /^.(.)(.*)/${if:${re:1}==#&&${info:irc_server_isupport_value,${server},NETWORK}=~^(Libera.Chat|freenode)$?:${re:1}}${re:2}/my_channel_no_prefix /.*/0/my_default_length /.*/white/my_default_fg /.*/31/my_default_bg /.*/24/my_default_separator /.*/default/my_end.bg /.*/${plugins.var.${tg_trigger_name}.list}/my_list /[^,]+/${if:${re:0}=~^[[:alnum:]_]+$?${re:0}}/my_list /[^,]+/plugins.var.${tg_trigger_name}.item.${re:0}/my_list /[^,]+/${if:${length:${eval:${${re:0}.content}}}!=?${re:0}}/my_list /[^,]+/${re:0},${re:0}/my_list /[^,]+(.*)/${re:1}/my_list /.*[^,].*/${re:0},my_end/my_list /,+/,/my_list /^,|,$//my_list /([^,]+),([^,]+)/${if:${length:${eval:${${re:1}.fg}}}!=?${re:1}.fg:my_default_fg},${if:${length:${eval:${${re:1}.bg}}}!=?${re:1}.bg:my_default_bg},${if:${length:${eval:${${re:1}.separator}}}!=?${re:1}.separator:my_default_separator},${if:${length:${eval:${${re:1}.length}}}!=?${re:1}.length:my_default_length},${re:1}.content,${if:${length:${eval:${${re:2}.bg}}}!=?${re:2}.bg:my_default_bg}/my_list /([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)(,|$)/${if:${plugins.var.${tg_trigger_name}.look.powerline}!=?${color:${eval:${${re:1}},${${re:2}}}} ${if:${eval:${${re:4}}}=~^[0-9]+$&&${eval:${${re:4}}}!=?${if:${lengthscr:${eval:${${re:5}}}}>=${eval:${${re:4}}}?${cutscr:+${eval:${${re:4}}},…,${eval:${${re:5}}}}:${eval:${${re:5}}}${repeat:${calc:${eval:${${re:4}}}-${lengthscr:${eval:${${re:5}}}}}, }}:${eval:${${re:5}}}}${color:${eval:${${re:1}},${${re:2}}}} ${if:${color:${eval:${${re:2}}}}==${color:${eval:${${re:6}}}}?${color:${eval:${${re:3}}}}:${color:${eval:${${re:2}},${${re:6}}}}}${color:reset}:${color:${eval:${${re:3}},${${re:2}}}}[${color:${eval:${${re:1}}}}${if:${eval:${${re:4}}}=~^[0-9]+$&&${eval:${${re:4}}}!=?${if:${lengthscr:${eval:${${re:5}}}}>=${eval:${${re:4}}}?${cutscr:+${eval:${${re:4}}},…,${eval:${${re:5}}}}:${eval:${${re:5}}}${repeat:${calc:${eval:${${re:4}}}-${lengthscr:${eval:${${re:5}}}}}, }}:${eval:${${re:5}}}}${color:${eval:${${re:3}},${${re:2}}}}]${color:reset} }/my_list /.+/${re:0} /my_list"
chanmon.return_code = ok
chanmon_tools.arguments = "chanmon_tools;manage the ${cut:7,,${tg_trigger_name}} buffer;look enable|disable|toggle <option1> [<option1>...] || item add <name> ["<position>" ["<length>" ["<fg>" ["<bg>" ["<separator>" ["<content>"]]]]]] || item del <name> [<name>...] || item set <name> <option2> [<value>] || item list|clear || list push|remove|replace|unshift <name> [<name>...] || list pop|shift|clear; look enable: enable an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n} look toggle: toggle an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n}look disable: disable an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n}    item add: add a new item${\n}    item del: delete one or more items${\n}    item set: change an item option${\n}   item list: list all options from all items${\n}  item clear: delete all items${\n}    list pop: remove the last item in the list${\n}   list push: put one or more items at the end of the list${\n}  list shift: remove the first item in the list${\n}  list clear: clear the list${\n} list remove: remove one or more items in the list${\n}list unshift: put one or more items at the beginning of the list${\n}list replace: replace the list${\n}     option1: name of an option that change the behavior of ${cut:7,,${tg_trigger_name}} (powerline, filtered_lines, ${if:${tg_trigger_name}==newsmon_tools?keep_url, keep_date:hidden_channels})${\n}        name: name of an item${\n}    position: 'start' to insert the item at the start of the list, 'end' to add the item at the end of the list${\n}      length: length of the item (content is evaluated)${\n}          fg: foreground color of the item (content is evaluated)${\n}          bg: background color of the item (content is evaluated)${\n}   separator: foreground color for the separator of the item (content is evaluated)${\n}     content: content of the item (content is evaluated)${\n}     option2: name of an item option (length, fg, bg, separator and content)${\n}       value: value of an option (content is evaluated)${\n}${\n}The item subcommand manages the items while the list subcommand manages the list of the displayed items. For an item to be displayed it must be in the list and the content must have a length of one or more once evaluated. So if you want to, for example, show an item only when the message is highlighted, use an if. In addition to the variables available in the print trigger, you also have those one: my_date_only my_time_only my_channel_no_prefix${if:${tg_trigger_name}==newsmon_tools?, my_site_and_sections, my_site, my_title, my_date, my_url, my_url_encode}.${\n}${\n}Exemples:${\n}  Add three items and display them:${\n}    /${tg_trigger_name} look enable powerline${\n}    /${tg_trigger_name} item add serv end ${\x22}3${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${server}${\x22}${\n}    /${tg_trigger_name} item add chan end ${\x22}4${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${my_channel_no_prefix}${\x22}${\n}    /${tg_trigger_name} item add nick end ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${tg_tag_nick}${\x22}${\n}  ${color:white,${if:${tg_trigger_name}==highmon_tools?124:24}} fr… ${color:black}${color:white} wee… ${color:black}${color:white} r3m ${color:${if:${tg_trigger_name}==highmon_tools?124:24},default};look enable|disable|toggle powerline|%* || item add|del|set|list|clear date|serv|chan|nick|date_hl|serv_hl|chan_hl|nick_hl|my_site|%* || list push|remove|replace|unshift|pop|shift|clear date|serv|chan|nick|date_hl|serv_hl|chan_hl|nick_hl|my_site|%*"
chanmon_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
chanmon_tools.conditions = "${info:version_number} >= 50462720 && ${tg_argv_eol1} =~ ^look +(enable|disable|toggle) +[[:alnum:]_ ]+$ || ${tg_argv_eol1} =~ ^item +add +[[:alnum:]_]+( |$) || ${tg_argv_eol1} =~ ^item +set +[[:alnum:]_]+ +[[:alnum:]_]+ . || ${tg_argv_eol1} =~ ^item +(list|clear)$ || ${tg_argv_eol1} =~ ^item +del +[[:alnum:]_ ]+$ || ${tg_argv_eol1} =~ ^list +(shift|pop|clear)$ || ${tg_argv_eol1} =~ ^list +(unshift|push|replace|remove) +[[:alnum:]_ ]+$"
chanmon_tools.enabled = on
chanmon_tools.hook = command
chanmon_tools.post_action = none
chanmon_tools.regex = "/.*/${tg_trigger_name}/my_buffer /_tools$//my_buffer /.*/${tg_argv1}/my_command /.*/${tg_argv2}/my_action /\$\{|;/${\x5cx5c}${re:0}/tg_argv_eol5 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv5 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv6 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv7 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv8 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv9 /.*/${if:${my_command} ${my_action}=~^item (add|set)$?${tg_argv3}:${if:${my_command} ${my_action}==item del||${my_command} ${my_action}=~^list (push|remove|replace|unshift)$?${tg_argv_eol3}}}/my_items / +/,/my_items /.*/${if:${my_command}==item?${if:${my_action}==add?${if:${tg_shell_argv4}==start?unshift:${if:${tg_shell_argv4}==end?push}}:${if:${my_action}==del?remove:${if:${my_action}==clear?clear}}}:${if:${my_command}==list?${my_action}}}/my_list_action /.*/${plugins.var.${my_buffer}.list}/my_list /[^,]+/${if:${re:0}=~^[[:alnum:]_]+$?${re:0}}/my_list /.+/,${re:0},/my_list /[^,]+(.*)/${if:${my_list_action}==shift?${re:1}:${re:0}}/my_list /(.*),[^,]+/${if:${my_list_action}==pop?${re:1}:${re:0}}/my_list /.*/${if:${my_list_action}==unshift?${my_items},}${re:0}/my_list /.*/${re:0}${if:${my_list_action}==push?,${my_items}}/my_list /[^,]+/${if:${my_list_action}==remove&&,${my_items},=-,${re:0},?:${re:0}}/my_list /.*/${if:${my_list_action}==replace?${my_items}:${re:0}}/my_list /.*/${if:${my_list_action}==clear?:${re:0}}/my_list /,+/,/my_list /^,|,$//my_list /.*/${if:${my_command}==look?${tg_argv_eol3}}/my_look_cmds ===([^ ]+) *===/mute /set plugins.var.${my_buffer}.look.${re:1} ${if:${my_action}==disable?0:${if:${my_action}==enable?1:${if:${plugins.var.${my_buffer}.look.${re:1}}!=?0:1}}};===my_look_cmds /$/${my_look_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item set?/mute /set plugins.var.${my_buffer}.item.${my_items}.${tg_argv4} \"${tg_argv_eol5}\";}===my_cmds_to_run ===.*===${if:${my_command} ${my_action}==item add?/mute /set plugins.var.${my_buffer}.item.${my_items}}===my_item_add_cmds ===.+===${re:0}.length \"${tg_shell_argv5}\";${re:0}.fg \"${tg_shell_argv6}\";${re:0}.bg \"${tg_shell_argv7}\";${re:0}.separator \"${tg_shell_argv8}\";${re:0}.content \"${tg_shell_argv9}\";===my_item_add_cmds /$/${my_item_add_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item list?/mute /set plugins.var.${my_buffer}.item.*;}===my_cmds_to_run /.*/${if:${my_command} ${my_action}==item del?${my_items}}/my_item_del_cmds ===([^,]+),?===/mute /unset -mask plugins.var.${my_buffer}.item.${re:1}.*;===my_item_del_cmds /$/${my_item_del_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item clear?/mute /unset -mask plugins.var.${my_buffer}.item.*;}===my_cmds_to_run ===$===${if:${my_list_action}!=?/mute /set plugins.var.${my_buffer}.list \"${my_list}\";}===my_cmds_to_run"
chanmon_tools.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}"
cmd_pass_register.return_code = ok
conky.arguments = "weechat_print"
conky.command = ""
conky.conditions = "${tg_buffer} == exec.exec.conky && ${tg_tags} =~ ,exec_stdout, && ${tg_message_nocolor} =~ ^[^:]+: *[^ ]"
conky.enabled = on
conky.hook = modifier
conky.post_action = none
conky.regex = "/^ \t([^:]+):(.*)/ ${color:_31}${re:1}\t${color:reset}${re:2}/ /.*/${tg_message_nocolor}/my_field /.*/${tg_message_nocolor}/my_value /^([^:]+):.*/${re:1}/my_field / /_/my_field /^[^:]+: */${re:1}/my_value"
conky.return_code = ok
control_buffers_change_control_window.arguments = "plugins.var.control_buffers_window;plugins.var.control_buffers2_window"
control_buffers_change_control_window.command = "/window refresh"
control_buffers_change_control_window.conditions = ""
control_buffers_change_control_window.enabled = on
control_buffers_change_control_window.hook = config
control_buffers_change_control_window.post_action = none
control_buffers_change_control_window.regex = ""
control_buffers_change_control_window.return_code = ok
day_changed_upgrade_scripts.arguments = "day_changed"
day_changed_upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
day_changed_upgrade_scripts.conditions = ""
day_changed_upgrade_scripts.enabled = on
day_changed_upgrade_scripts.hook = signal
day_changed_upgrade_scripts.post_action = none
day_changed_upgrade_scripts.regex = ""
day_changed_upgrade_scripts.return_code = ok
devinfo.arguments = "devinfo;infos about WeeChat;[-extra] [-match];-extra: displays extra informations like in how many day the next stable will be released${\n}-match: show if you are up-to-date${\n}${\n}This command retrieve infos about current and next stable version.${\n}${\n}Exemples:${\n}  Verbose output:${\n}    /${tg_trigger_name} -extra -match;-extra|-match|%*"
devinfo.command = "/exec -norc -timeout 5 -hsignal devinfo${my_flags} url:https://weechat.org/dev/info/all/"
devinfo.conditions = "${tg_argv_eol1} =~ ^(-(extra|match) +)*(-(extra|match))?$"
devinfo.enabled = on
devinfo.hook = command
devinfo.post_action = none
devinfo.regex = "/.*/${tg_argv_eol1}/my_flags /(^| )-/,/my_flags / +//my_flags /.+/${re:0},/my_flags"
devinfo.return_code = ok
devinfo_hsignal.arguments = "devinfo*"
devinfo_hsignal.command = "/print -current -escape ${out}"
devinfo_hsignal.conditions = "${err} == && ${info:python_version} !="
devinfo_hsignal.enabled = on
devinfo_hsignal.hook = hsignal
devinfo_hsignal.post_action = none
devinfo_hsignal.regex = "/.*/${tg_signal}/my_flags /^devinfo//my_flags /(?n)^stable:(.*)/${re:0}${if:${my_flags}=~,match,&&${info:version}!~-(dev|rc[0-9]+)? ${if:${re:1}==${info:version}?${color:121}(as mine!):${color:163}(mine is ${info:version})}}/out /(?n)^devel:(.*)/${re:0}${if:${my_flags}=~,match,&&${info:version}=~-(dev|rc[0-9]+)? ${if:${re:1}==${info:version}?${color:121}(as mine!):${color:163}(mine is ${info:version})}}/out /.*/${info:version_git}/my_git /^[^g]+g(.*)/${re:1}/my_git /(?n)^git:(.*)/${re:0}${if:${my_flags}=~,match,&&${info:version}=~-(dev|rc[0-9]+)? ${if:${re:1}=~^${my_git}?${color:121}(as mine!):${color:163}(mine is ${info:version_git})}}/out /(?n)^(stable_date:)(.*)/${re:1}${info:date_preferred,${re:2}}${if:${my_flags}=~,extra,? (since ${info:date_calc_days,${re:2}} days)}/out /(?n)^(next_stable_date:)(.*)/${re:1}${info:date_preferred,${re:2}}${if:${my_flags}=~,extra,? (${info:date_calc_days,${re:2}} days left)}/out /_/ /out /(?n)^([^:]+:)(.*)/${color:31}${re:1} ${color:default}${re:2}/out /\n/\x5cn/out"
devinfo_hsignal.return_code = ok
highmon.arguments = "*;irc_privmsg,matrix_message,matrix_text"
highmon.command = "/print -newbuffer ${tg_trigger_name} -tags ${tg_tags} \t${my_list}${tg_message};/mute /logo timer 5 0 150;/mute /logo stop;/mute /logo start"
highmon.conditions = "${info:version_number} >= 50462720 && ${tg_highlight} != && ${buffer.local_variables.type} == channel && ${buffer.local_variables.no_${tg_trigger_name}_like} == && (${plugins.var.${tg_trigger_name}.look.filtered_lines} != || ${plugins.var.${tg_trigger_name}.look.filtered_lines} == && ${tg_displayed} !=) && (${plugins.var.${tg_trigger_name}.look.hidden_channels} != || ${plugins.var.${tg_trigger_name}.look.hidden_channels} == && ${buffer.hidden} ==)"
highmon.enabled = on
highmon.hook = print
highmon.post_action = none
highmon.regex = "/.*/${if:${buffer.local_variables.script_name}==matrix||${buffer.local_variables.plugin}==matrix?nick_${base_encode:64,${tg_tag_nick}}:${tg_tags}}/tg_tags /.*/${tg_date}/my_date_only /(.*) .*/${re:1}/my_date_only /.*/${tg_date}/my_time_only /.* (.*)/${re:1}/my_time_only /.*/${buffer.short_name}/my_channel_no_prefix /^.(.)(.*)/${if:${re:1}==#&&${info:irc_server_isupport_value,${server},NETWORK}=~^(Libera.Chat|freenode)$?:${re:1}}${re:2}/my_channel_no_prefix /.*/0/my_default_length /.*/white/my_default_fg /.*/31/my_default_bg /.*/24/my_default_separator /.*/default/my_end.bg /.*/${plugins.var.${tg_trigger_name}.list}/my_list /[^,]+/${if:${re:0}=~^[[:alnum:]_]+$?${re:0}}/my_list /[^,]+/plugins.var.${tg_trigger_name}.item.${re:0}/my_list /[^,]+/${if:${length:${eval:${${re:0}.content}}}!=?${re:0}}/my_list /[^,]+/${re:0},${re:0}/my_list /[^,]+(.*)/${re:1}/my_list /.*[^,].*/${re:0},my_end/my_list /,+/,/my_list /^,|,$//my_list /([^,]+),([^,]+)/${if:${length:${eval:${${re:1}.fg}}}!=?${re:1}.fg:my_default_fg},${if:${length:${eval:${${re:1}.bg}}}!=?${re:1}.bg:my_default_bg},${if:${length:${eval:${${re:1}.separator}}}!=?${re:1}.separator:my_default_separator},${if:${length:${eval:${${re:1}.length}}}!=?${re:1}.length:my_default_length},${re:1}.content,${if:${length:${eval:${${re:2}.bg}}}!=?${re:2}.bg:my_default_bg}/my_list /([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)(,|$)/${if:${plugins.var.${tg_trigger_name}.look.powerline}!=?${color:${eval:${${re:1}},${${re:2}}}} ${if:${eval:${${re:4}}}=~^[0-9]+$&&${eval:${${re:4}}}!=?${if:${lengthscr:${eval:${${re:5}}}}>=${eval:${${re:4}}}?${cutscr:+${eval:${${re:4}}},…,${eval:${${re:5}}}}:${eval:${${re:5}}}${repeat:${calc:${eval:${${re:4}}}-${lengthscr:${eval:${${re:5}}}}}, }}:${eval:${${re:5}}}}${color:${eval:${${re:1}},${${re:2}}}} ${if:${color:${eval:${${re:2}}}}==${color:${eval:${${re:6}}}}?${color:${eval:${${re:3}}}}:${color:${eval:${${re:2}},${${re:6}}}}}${color:reset}:${color:${eval:${${re:3}},${${re:2}}}}[${color:${eval:${${re:1}}}}${if:${eval:${${re:4}}}=~^[0-9]+$&&${eval:${${re:4}}}!=?${if:${lengthscr:${eval:${${re:5}}}}>=${eval:${${re:4}}}?${cutscr:+${eval:${${re:4}}},…,${eval:${${re:5}}}}:${eval:${${re:5}}}${repeat:${calc:${eval:${${re:4}}}-${lengthscr:${eval:${${re:5}}}}}, }}:${eval:${${re:5}}}}${color:${eval:${${re:3}},${${re:2}}}}]${color:reset} }/my_list /.+/${re:0} /my_list"
highmon.return_code = ok
highmon_tools.arguments = "highmon_tools;manage the ${cut:7,,${tg_trigger_name}} buffer;look enable|disable|toggle <option1> [<option1>...] || item add <name> ["<position>" ["<length>" ["<fg>" ["<bg>" ["<separator>" ["<content>"]]]]]] || item del <name> [<name>...] || item set <name> <option2> [<value>] || item list|clear || list push|remove|replace|unshift <name> [<name>...] || list pop|shift|clear; look enable: enable an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n} look toggle: toggle an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n}look disable: disable an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n}    item add: add a new item${\n}    item del: delete one or more items${\n}    item set: change an item option${\n}   item list: list all options from all items${\n}  item clear: delete all items${\n}    list pop: remove the last item in the list${\n}   list push: put one or more items at the end of the list${\n}  list shift: remove the first item in the list${\n}  list clear: clear the list${\n} list remove: remove one or more items in the list${\n}list unshift: put one or more items at the beginning of the list${\n}list replace: replace the list${\n}     option1: name of an option that change the behavior of ${cut:7,,${tg_trigger_name}} (powerline, filtered_lines, ${if:${tg_trigger_name}==newsmon_tools?keep_url, keep_date:hidden_channels})${\n}        name: name of an item${\n}    position: 'start' to insert the item at the start of the list, 'end' to add the item at the end of the list${\n}      length: length of the item (content is evaluated)${\n}          fg: foreground color of the item (content is evaluated)${\n}          bg: background color of the item (content is evaluated)${\n}   separator: foreground color for the separator of the item (content is evaluated)${\n}     content: content of the item (content is evaluated)${\n}     option2: name of an item option (length, fg, bg, separator and content)${\n}       value: value of an option (content is evaluated)${\n}${\n}The item subcommand manages the items while the list subcommand manages the list of the displayed items. For an item to be displayed it must be in the list and the content must have a length of one or more once evaluated. So if you want to, for example, show an item only when the message is highlighted, use an if. In addition to the variables available in the print trigger, you also have those one: my_date_only my_time_only my_channel_no_prefix${if:${tg_trigger_name}==newsmon_tools?, my_site_and_sections, my_site, my_title, my_date, my_url, my_url_encode}.${\n}${\n}Exemples:${\n}  Add three items and display them:${\n}    /${tg_trigger_name} look enable powerline${\n}    /${tg_trigger_name} item add serv end ${\x22}3${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${server}${\x22}${\n}    /${tg_trigger_name} item add chan end ${\x22}4${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${my_channel_no_prefix}${\x22}${\n}    /${tg_trigger_name} item add nick end ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${tg_tag_nick}${\x22}${\n}  ${color:white,${if:${tg_trigger_name}==highmon_tools?124:24}} fr… ${color:black}${color:white} wee… ${color:black}${color:white} r3m ${color:${if:${tg_trigger_name}==highmon_tools?124:24},default};look enable|disable|toggle powerline|%* || item add|del|set|list|clear date|serv|chan|nick|date_hl|serv_hl|chan_hl|nick_hl|my_site|%* || list push|remove|replace|unshift|pop|shift|clear date|serv|chan|nick|date_hl|serv_hl|chan_hl|nick_hl|my_site|%*"
highmon_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
highmon_tools.conditions = "${info:version_number} >= 50462720 && ${tg_argv_eol1} =~ ^look +(enable|disable|toggle) +[[:alnum:]_ ]+$ || ${tg_argv_eol1} =~ ^item +add +[[:alnum:]_]+( |$) || ${tg_argv_eol1} =~ ^item +set +[[:alnum:]_]+ +[[:alnum:]_]+ . || ${tg_argv_eol1} =~ ^item +(list|clear)$ || ${tg_argv_eol1} =~ ^item +del +[[:alnum:]_ ]+$ || ${tg_argv_eol1} =~ ^list +(shift|pop|clear)$ || ${tg_argv_eol1} =~ ^list +(unshift|push|replace|remove) +[[:alnum:]_ ]+$"
highmon_tools.enabled = on
highmon_tools.hook = command
highmon_tools.post_action = none
highmon_tools.regex = "/.*/${tg_trigger_name}/my_buffer /_tools$//my_buffer /.*/${tg_argv1}/my_command /.*/${tg_argv2}/my_action /\$\{|;/${\x5cx5c}${re:0}/tg_argv_eol5 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv5 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv6 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv7 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv8 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv9 /.*/${if:${my_command} ${my_action}=~^item (add|set)$?${tg_argv3}:${if:${my_command} ${my_action}==item del||${my_command} ${my_action}=~^list (push|remove|replace|unshift)$?${tg_argv_eol3}}}/my_items / +/,/my_items /.*/${if:${my_command}==item?${if:${my_action}==add?${if:${tg_shell_argv4}==start?unshift:${if:${tg_shell_argv4}==end?push}}:${if:${my_action}==del?remove:${if:${my_action}==clear?clear}}}:${if:${my_command}==list?${my_action}}}/my_list_action /.*/${plugins.var.${my_buffer}.list}/my_list /[^,]+/${if:${re:0}=~^[[:alnum:]_]+$?${re:0}}/my_list /.+/,${re:0},/my_list /[^,]+(.*)/${if:${my_list_action}==shift?${re:1}:${re:0}}/my_list /(.*),[^,]+/${if:${my_list_action}==pop?${re:1}:${re:0}}/my_list /.*/${if:${my_list_action}==unshift?${my_items},}${re:0}/my_list /.*/${re:0}${if:${my_list_action}==push?,${my_items}}/my_list /[^,]+/${if:${my_list_action}==remove&&,${my_items},=-,${re:0},?:${re:0}}/my_list /.*/${if:${my_list_action}==replace?${my_items}:${re:0}}/my_list /.*/${if:${my_list_action}==clear?:${re:0}}/my_list /,+/,/my_list /^,|,$//my_list /.*/${if:${my_command}==look?${tg_argv_eol3}}/my_look_cmds ===([^ ]+) *===/mute /set plugins.var.${my_buffer}.look.${re:1} ${if:${my_action}==disable?0:${if:${my_action}==enable?1:${if:${plugins.var.${my_buffer}.look.${re:1}}!=?0:1}}};===my_look_cmds /$/${my_look_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item set?/mute /set plugins.var.${my_buffer}.item.${my_items}.${tg_argv4} \"${tg_argv_eol5}\";}===my_cmds_to_run ===.*===${if:${my_command} ${my_action}==item add?/mute /set plugins.var.${my_buffer}.item.${my_items}}===my_item_add_cmds ===.+===${re:0}.length \"${tg_shell_argv5}\";${re:0}.fg \"${tg_shell_argv6}\";${re:0}.bg \"${tg_shell_argv7}\";${re:0}.separator \"${tg_shell_argv8}\";${re:0}.content \"${tg_shell_argv9}\";===my_item_add_cmds /$/${my_item_add_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item list?/mute /set plugins.var.${my_buffer}.item.*;}===my_cmds_to_run /.*/${if:${my_command} ${my_action}==item del?${my_items}}/my_item_del_cmds ===([^,]+),?===/mute /unset -mask plugins.var.${my_buffer}.item.${re:1}.*;===my_item_del_cmds /$/${my_item_del_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item clear?/mute /unset -mask plugins.var.${my_buffer}.item.*;}===my_cmds_to_run ===$===${if:${my_list_action}!=?/mute /set plugins.var.${my_buffer}.list \"${my_list}\";}===my_cmds_to_run"
highmon_tools.return_code = ok
logo.arguments = "logo;WeeChat Animated Logo;start|stop|toggle|faster|slower || timer <time> [<align> [<number>]] || speed <speed>; start: start the timer${\n}  stop: stop the timer${\n}toggle: toggle the timer${\n}faster: increase the speed of the timer${\n}slower: decrease the speed of the timer${\n} timer: use a custom ms${\n} speed: use a preset${\n}  time: number of ms${\n} align: alignment on second${\n}number: max number of calls${\n} speed: one of the following values: ultra, fast, normal, slow${\n}${\n}Let's play with the WeeChat Animated ASCII logo!${\n}${\n}Exemples:${\n}  Start the timer !!${\n}    /logo start${\n}  Faster !!${\n}    /logo faster${\n}  Any preset please ? Of course!${\n}    /logo speed ultra;start|stop|toggle|faster|slower || timer 5000|4000|3000|2000|1000 || speed ultra|fast|normal|slow"
logo.command = "/command -buffer core.weechat * /eval ${my_cmds_to_run}"
logo.conditions = "${tg_argv_eol1} =~ ^(start|stop|toggle|faster|slower)$ || ${tg_argv_eol1} =~ ^timer +[0-9]+( +[0-9]+)?( +[0-9]+)?$ || ${tg_argv_eol1} =~ ^speed +(ultra|fast|normal|slow)$"
logo.enabled = on
logo.hook = command
logo.post_action = none
logo.regex = "/.*/${tg_argv1}/my_action /start/enable/my_action /stop/disable/my_action /.*/${trigger.trigger.weechat_logo_random_colors.arguments}/my_hook_args /.*/${my_hook_args}/my_current_ms /.*/${if:${my_hook_args}=~;?${my_hook_args}}/my_align_sec /.*/${if:${my_hook_args}=~;.*;?${my_hook_args}}/my_num_call /[^;]+;([^;]*).*/${re:1}/my_align_sec /[^;]+;[^;]*;(.*)/${re:1}/my_num_call /.*/${if:${my_action}==timer?${tg_argv3}:${re:0}}/my_align_sec /.*/${if:${my_action}==timer?${tg_argv4}:${re:0}}/my_num_call /;.*//my_current_ms /.*/${if:${my_action}==faster?${if:${my_current_ms}<50?${my_current_ms}:${calc:${my_current_ms}-50}}:${if:${my_action}==slower?${calc:${my_current_ms}+50}:${tg_argv2}}}/my_speed /ultra/5/my_speed /fast/50/my_speed /normal/500/my_speed /slow/1000/my_speed ===.*===/mute ${if:${my_action}=~(enable|disable|toggle)?/trigger ${my_action} weechat_logo_random_colors:/trigger set weechat_logo_random_colors arguments ${my_speed};${my_align_sec};${my_num_call}}===my_cmds_to_run"
logo.return_code = ok
modifier_is_nick_valid.arguments = "input_text_display"
modifier_is_nick_valid.command = ""
modifier_is_nick_valid.conditions = "${tg_string_nocolor} =~ ^/nick . && ${buffer.plugin.name} == irc"
modifier_is_nick_valid.enabled = on
modifier_is_nick_valid.hook = modifier
modifier_is_nick_valid.post_action = none
modifier_is_nick_valid.regex = "===.*===${tg_string_nocolor}===my_nick ===^/nick (.+)===${re:1}===my_nick ===^-all (.+)===${re:1}===my_nick ===.*===${if:${tg_string_nocolor}=~^/nick -all[ ]?${info:python_eval,infolist = weechat.infolist_get('irc_server', '', '')\nwhile weechat.infolist_next(infolist):\n if weechat.infolist_integer(infolist, 'is_connected'): print(weechat.infolist_string(infolist, 'name') + ' ')\nweechat.infolist_free(infolist)}:${server}} ===my_servers ===[^ ]+===${re:0} ${info:irc_server_isupport_value,${re:0},NICKLEN} ${info:irc_server_isupport_value,${re:0},CASEMAPPING} ${if:${info:irc_server_isupport_value,${re:0},UTF8MAPPING}!=?${info:irc_server_isupport_value,${re:0},UTF8MAPPING}:no}===my_servers ===([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+)===${re:0} ${if:${info:irc_is_nick,${re:1},${my_nick}}!=?valid:invalid}===my_servers ===([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+) ([^ ]+)===\n${if:${re:5}==valid?${color:016,046}:${color:016,163}}${re:1} ${color:reverse} NICKLEN = ${calc:${re:2} - ${length:${my_nick}}}/${re:2}  CASEMAPPING = ${re:3}  UTF8MAPPING = ${re:4}${color:016,default}===my_servers ===.*===${re:0} ${my_servers}===tg_string"
modifier_is_nick_valid.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
news_click.arguments = "news_click"
news_click.command = "/command -buffer ${buffer.full_name} core /input insert ${_chat_line_tags}\x20"
news_click.conditions = ""
news_click.enabled = on
news_click.hook = hsignal
news_click.post_action = none
news_click.regex = "/(^|.*,)url_([^,]+)(,.*|$)/${re:2}/_chat_line_tags /#/+/_chat_line_tags /.*/${base_decode:64,${re:0}}/_chat_line_tags"
news_click.return_code = ok
newsmon.arguments = "irc.libera.##news;irc_privmsg,matrix_message,matrix_text,debug_newsmon"
newsmon.command = "/print -newbuffer ${tg_trigger_name} -tags ${tg_tags},${my_url_encode_tag} \t${my_list}${my_title}${if:${plugins.var.newsmon.look.keep_url}!=? ${my_url}}${if:${plugins.var.newsmon.look.keep_date}!=? ${my_date}}"
newsmon.conditions = "${info:version_number} >= 50462720 && (${plugins.var.${tg_trigger_name}.look.filtered_lines} != || ${plugins.var.${tg_trigger_name}.look.filtered_lines} == && ${tg_displayed} !=)"
newsmon.enabled = on
newsmon.hook = print
newsmon.post_action = none
newsmon.regex = "/.*/${tg_message_nocolor}/my_site_and_sections /^\[([^]]+)\].*/${re:1}/my_site_and_sections / - /${if:${plugins.var.newsmon.look.powerline}!=?  : - }/my_site_and_sections /.*/${my_site_and_sections}/my_site /.*/${if:${my_site_and_sections}=~[ ][-][ ]?${my_site_and_sections}}/my_site_sections / [-] .*//my_site / [-] (.*)/----- ${re:1}/my_site_sections /.*----- //my_site_sections /.*/${tg_message_nocolor}/my_title /^\[[^]]+\] (.*)/${re:1}/my_title /.*/${my_title}/my_date /.* ([0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])/${re:1}/my_date /(.*) [0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]/${re:1}/my_title /.*/${my_title}/my_url ==.* (https?://[^ ]+)==${re:1}==my_url ==(.*) https?://[^ ]+==${re:1}==my_title /.*/${my_url}/my_url_encode /.*/${base_encode:64,${my_url_encode}}/my_url_encode /\+/#/my_url_encode /$/url_${my_url_encode}/my_url_encode_tag /.*/${if:${buffer.local_variables.script_name}==matrix||${buffer.local_variables.plugin}==matrix?nick_${base_encode:64,${tg_tag_nick}}:${tg_tags}}/tg_tags /.*/${tg_date}/my_date_only /(.*) .*/${re:1}/my_date_only /.*/${tg_date}/my_time_only /.* (.*)/${re:1}/my_time_only /.*/${buffer.short_name}/my_channel_no_prefix /^.(.)(.*)/${if:${re:1}==#&&${info:irc_server_isupport_value,${server},NETWORK}=~^(Libera.Chat|freenode)$?:${re:1}}${re:2}/my_channel_no_prefix /.*/0/my_default_length /.*/white/my_default_fg /.*/31/my_default_bg /.*/24/my_default_separator /.*/default/my_end.bg /.*/${plugins.var.${tg_trigger_name}.list}/my_list /[^,]+/${if:${re:0}=~^[[:alnum:]_]+$?${re:0}}/my_list /[^,]+/plugins.var.${tg_trigger_name}.item.${re:0}/my_list /[^,]+/${if:${length:${eval:${${re:0}.content}}}!=?${re:0}}/my_list /[^,]+/${re:0},${re:0}/my_list /[^,]+(.*)/${re:1}/my_list /.*[^,].*/${re:0},my_end/my_list /,+/,/my_list /^,|,$//my_list /([^,]+),([^,]+)/${if:${length:${eval:${${re:1}.fg}}}!=?${re:1}.fg:my_default_fg},${if:${length:${eval:${${re:1}.bg}}}!=?${re:1}.bg:my_default_bg},${if:${length:${eval:${${re:1}.separator}}}!=?${re:1}.separator:my_default_separator},${if:${length:${eval:${${re:1}.length}}}!=?${re:1}.length:my_default_length},${re:1}.content,${if:${length:${eval:${${re:2}.bg}}}!=?${re:2}.bg:my_default_bg}/my_list /([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)(,|$)/${if:${plugins.var.${tg_trigger_name}.look.powerline}!=?${color:${eval:${${re:1}},${${re:2}}}} ${if:${eval:${${re:4}}}=~^[0-9]+$&&${eval:${${re:4}}}!=?${if:${lengthscr:${eval:${${re:5}}}}>=${eval:${${re:4}}}?${cutscr:+${eval:${${re:4}}},…,${eval:${${re:5}}}}:${eval:${${re:5}}}${repeat:${calc:${eval:${${re:4}}}-${lengthscr:${eval:${${re:5}}}}}, }}:${eval:${${re:5}}}}${color:${eval:${${re:1}},${${re:2}}}} ${if:${color:${eval:${${re:2}}}}==${color:${eval:${${re:6}}}}?${color:${eval:${${re:3}}}}:${color:${eval:${${re:2}},${${re:6}}}}}${color:reset}:${color:${eval:${${re:3}},${${re:2}}}}[${color:${eval:${${re:1}}}}${if:${eval:${${re:4}}}=~^[0-9]+$&&${eval:${${re:4}}}!=?${if:${lengthscr:${eval:${${re:5}}}}>=${eval:${${re:4}}}?${cutscr:+${eval:${${re:4}}},…,${eval:${${re:5}}}}:${eval:${${re:5}}}${repeat:${calc:${eval:${${re:4}}}-${lengthscr:${eval:${${re:5}}}}}, }}:${eval:${${re:5}}}}${color:${eval:${${re:3}},${${re:2}}}}]${color:reset} }/my_list /.+/${re:0} /my_list"
newsmon.return_code = ok
newsmon_tools.arguments = "newsmon_tools;manage the ${cut:7,,${tg_trigger_name}} buffer;look enable|disable|toggle <option1> [<option1>...] || item add <name> ["<position>" ["<length>" ["<fg>" ["<bg>" ["<separator>" ["<content>"]]]]]] || item del <name> [<name>...] || item set <name> <option2> [<value>] || item list|clear || list push|remove|replace|unshift <name> [<name>...] || list pop|shift|clear; look enable: enable an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n} look toggle: toggle an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n}look disable: disable an option that change the behavior of ${cut:7,,${tg_trigger_name}}${\n}    item add: add a new item${\n}    item del: delete one or more items${\n}    item set: change an item option${\n}   item list: list all options from all items${\n}  item clear: delete all items${\n}    list pop: remove the last item in the list${\n}   list push: put one or more items at the end of the list${\n}  list shift: remove the first item in the list${\n}  list clear: clear the list${\n} list remove: remove one or more items in the list${\n}list unshift: put one or more items at the beginning of the list${\n}list replace: replace the list${\n}     option1: name of an option that change the behavior of ${cut:7,,${tg_trigger_name}} (powerline, filtered_lines, ${if:${tg_trigger_name}==newsmon_tools?keep_url, keep_date:hidden_channels})${\n}        name: name of an item${\n}    position: 'start' to insert the item at the start of the list, 'end' to add the item at the end of the list${\n}      length: length of the item (content is evaluated)${\n}          fg: foreground color of the item (content is evaluated)${\n}          bg: background color of the item (content is evaluated)${\n}   separator: foreground color for the separator of the item (content is evaluated)${\n}     content: content of the item (content is evaluated)${\n}     option2: name of an item option (length, fg, bg, separator and content)${\n}       value: value of an option (content is evaluated)${\n}${\n}The item subcommand manages the items while the list subcommand manages the list of the displayed items. For an item to be displayed it must be in the list and the content must have a length of one or more once evaluated. So if you want to, for example, show an item only when the message is highlighted, use an if. In addition to the variables available in the print trigger, you also have those one: my_date_only my_time_only my_channel_no_prefix${if:${tg_trigger_name}==newsmon_tools?, my_site_and_sections, my_site, my_title, my_date, my_url, my_url_encode}.${\n}${\n}Exemples:${\n}  Add three items and display them:${\n}    /${tg_trigger_name} look enable powerline${\n}    /${tg_trigger_name} item add serv end ${\x22}3${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${server}${\x22}${\n}    /${tg_trigger_name} item add chan end ${\x22}4${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${my_channel_no_prefix}${\x22}${\n}    /${tg_trigger_name} item add nick end ${\x22}5${\x22} ${\x22}white${\x22} ${\x22}${if:${tg_trigger_name}==highmon_tools?124:24}${\x22} ${\x22}black${\x22} ${\x22}\${tg_tag_nick}${\x22}${\n}  ${color:white,${if:${tg_trigger_name}==highmon_tools?124:24}} fr… ${color:black}${color:white} wee… ${color:black}${color:white} r3m ${color:${if:${tg_trigger_name}==highmon_tools?124:24},default};look enable|disable|toggle powerline|%* || item add|del|set|list|clear date|serv|chan|nick|date_hl|serv_hl|chan_hl|nick_hl|my_site|%* || list push|remove|replace|unshift|pop|shift|clear date|serv|chan|nick|date_hl|serv_hl|chan_hl|nick_hl|my_site|%*"
newsmon_tools.command = "/command -buffer core.weechat * /eval -s ${my_cmds_to_run}"
newsmon_tools.conditions = "${info:version_number} >= 50462720 && ${tg_argv_eol1} =~ ^look +(enable|disable|toggle) +[[:alnum:]_ ]+$ || ${tg_argv_eol1} =~ ^item +add +[[:alnum:]_]+( |$) || ${tg_argv_eol1} =~ ^item +set +[[:alnum:]_]+ +[[:alnum:]_]+ . || ${tg_argv_eol1} =~ ^item +(list|clear)$ || ${tg_argv_eol1} =~ ^item +del +[[:alnum:]_ ]+$ || ${tg_argv_eol1} =~ ^list +(shift|pop|clear)$ || ${tg_argv_eol1} =~ ^list +(unshift|push|replace|remove) +[[:alnum:]_ ]+$"
newsmon_tools.enabled = on
newsmon_tools.hook = command
newsmon_tools.post_action = none
newsmon_tools.regex = "/.*/${tg_trigger_name}/my_buffer /_tools$//my_buffer /.*/${tg_argv1}/my_command /.*/${tg_argv2}/my_action /\$\{|;/${\x5cx5c}${re:0}/tg_argv_eol5 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv5 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv6 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv7 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv8 /\$\{|;/${\x5cx5c}${re:0}/tg_shell_argv9 /.*/${if:${my_command} ${my_action}=~^item (add|set)$?${tg_argv3}:${if:${my_command} ${my_action}==item del||${my_command} ${my_action}=~^list (push|remove|replace|unshift)$?${tg_argv_eol3}}}/my_items / +/,/my_items /.*/${if:${my_command}==item?${if:${my_action}==add?${if:${tg_shell_argv4}==start?unshift:${if:${tg_shell_argv4}==end?push}}:${if:${my_action}==del?remove:${if:${my_action}==clear?clear}}}:${if:${my_command}==list?${my_action}}}/my_list_action /.*/${plugins.var.${my_buffer}.list}/my_list /[^,]+/${if:${re:0}=~^[[:alnum:]_]+$?${re:0}}/my_list /.+/,${re:0},/my_list /[^,]+(.*)/${if:${my_list_action}==shift?${re:1}:${re:0}}/my_list /(.*),[^,]+/${if:${my_list_action}==pop?${re:1}:${re:0}}/my_list /.*/${if:${my_list_action}==unshift?${my_items},}${re:0}/my_list /.*/${re:0}${if:${my_list_action}==push?,${my_items}}/my_list /[^,]+/${if:${my_list_action}==remove&&,${my_items},=-,${re:0},?:${re:0}}/my_list /.*/${if:${my_list_action}==replace?${my_items}:${re:0}}/my_list /.*/${if:${my_list_action}==clear?:${re:0}}/my_list /,+/,/my_list /^,|,$//my_list /.*/${if:${my_command}==look?${tg_argv_eol3}}/my_look_cmds ===([^ ]+) *===/mute /set plugins.var.${my_buffer}.look.${re:1} ${if:${my_action}==disable?0:${if:${my_action}==enable?1:${if:${plugins.var.${my_buffer}.look.${re:1}}!=?0:1}}};===my_look_cmds /$/${my_look_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item set?/mute /set plugins.var.${my_buffer}.item.${my_items}.${tg_argv4} \"${tg_argv_eol5}\";}===my_cmds_to_run ===.*===${if:${my_command} ${my_action}==item add?/mute /set plugins.var.${my_buffer}.item.${my_items}}===my_item_add_cmds ===.+===${re:0}.length \"${tg_shell_argv5}\";${re:0}.fg \"${tg_shell_argv6}\";${re:0}.bg \"${tg_shell_argv7}\";${re:0}.separator \"${tg_shell_argv8}\";${re:0}.content \"${tg_shell_argv9}\";===my_item_add_cmds /$/${my_item_add_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item list?/mute /set plugins.var.${my_buffer}.item.*;}===my_cmds_to_run /.*/${if:${my_command} ${my_action}==item del?${my_items}}/my_item_del_cmds ===([^,]+),?===/mute /unset -mask plugins.var.${my_buffer}.item.${re:1}.*;===my_item_del_cmds /$/${my_item_del_cmds}/my_cmds_to_run ===$===${if:${my_command} ${my_action}==item clear?/mute /unset -mask plugins.var.${my_buffer}.item.*;}===my_cmds_to_run ===$===${if:${my_list_action}!=?/mute /set plugins.var.${my_buffer}.list \"${my_list}\";}===my_cmds_to_run"
newsmon_tools.return_code = ok
no_notify_duck_command.arguments = "*;irc.*;irc_privmsg"
no_notify_duck_command.command = ""
no_notify_duck_command.conditions = "${tg_message_nocolor} =~ ^[!,.](bef|bang|reload|shop|duckstats|friends|killers)(\s|$) && ${buffer.local_variables.type} == channel"
no_notify_duck_command.enabled = on
no_notify_duck_command.hook = line
no_notify_duck_command.post_action = none
no_notify_duck_command.regex = "/.*/-1/notify_level"
no_notify_duck_command.return_code = ok
nullpointer.arguments = "nullpointer"
nullpointer.command = "/command -buffer ${buffer.full_name} core /input delete_line;/command -buffer ${buffer.full_name} core /input insert ${out}"
nullpointer.conditions = ""
nullpointer.enabled = on
nullpointer.hook = hsignal
nullpointer.post_action = none
nullpointer.regex = "/\n//out"
nullpointer.return_code = ok
render_buflist.arguments = "render_left_section"
render_buflist.command = ""
render_buflist.conditions = ""
render_buflist.enabled = on
render_buflist.hook = modifier
render_buflist.post_action = none
render_buflist.regex = "/.*/${if:${tg_modifier_data}==server?${color:,31}:${color:default}}${if:${lengthscr:${re:0}} > ${plugins.var.buflist.section.left.size}?${cutscr:+${plugins.var.buflist.section.left.size},${if:${tg_modifier_data}==server?${color:white}:${color:${weechat.color.chat_prefix_more}}}${weechat.look.prefix_align_more},${re:0}}:${re:0}${repeat:${calc:${plugins.var.buflist.section.left.size} - ${lengthscr:${re:0}}}, }}/tg_string"
render_buflist.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
slack_matrix_server_search.arguments = "slack_matrix_server_search"
slack_matrix_server_search.command = ""
slack_matrix_server_search.conditions = "${info:python_version} != && ${tg_arguments} != && (${buffer[${tg_arguments}].local_variables.script_name} =~ ^(slack|matrix)$ || ${buffer[${tg_arguments}].local_variables.plugin} == matrix)"
slack_matrix_server_search.enabled = on
slack_matrix_server_search.hook = info
slack_matrix_server_search.post_action = none
slack_matrix_server_search.regex = "/.*/${buffer[${tg_arguments}].local_variables.plugin}/my_plugin /.*/${buffer[${tg_arguments}].local_variables.script_name}/my_script /.*/${if:${my_plugin}==matrix||${my_script}==matrix?server.}/my_server_prefix /.*/${buffer[${tg_arguments}].local_variables.server}/my_server /.*/${my_plugin}.${my_server_prefix}${my_server}/my_server_full_name ==\x5c\x5c==\x5c\x5c==my_server_full_name =='==\'==my_server_full_name /.*/${info:python_eval,print(weechat.buffer_search('==', '${my_server_full_name}'))}/tg_info"
slack_matrix_server_search.return_code = ok
toggle_bufautoset.arguments = "toggle_bufautoset;toggle bufautoset options;<buffer_property> <buffer_fullname>;buffer_property: name of the property${\n}buffer_fullname: name of the buffer${\n}${\n}The buffer_autoset.py script has no toggle mechanism so this command bring this functionality. Also, the script does not reset a property or localvar after deleting them. For example, if you type /buffer_autoset add irc.libera.#weechat localvar_set_something 1, and then, /buffer_autoset del irc.libera.#weechat.localvar_set_something, the localvar will still appears in /buffer localvar until you close and reoppen the buffer. This command will remove the localvar and hidden property upon deletion. You should use this command only for properties that take 0 or 1 as value or localvar that take 0 or 1.;;"
toggle_bufautoset.command = "/mute /buffer_autoset ${my_action} ${my_params};/command -buffer ${my_full_name} * /buffer set ${my_property} ${if:${my_action}==add?1:0}"
toggle_bufautoset.conditions = "${tg_argv2} !="
toggle_bufautoset.enabled = on
toggle_bufautoset.hook = command
toggle_bufautoset.post_action = none
toggle_bufautoset.regex = "/.*/${tg_argv1}/my_property /.*/${tg_argv2}/my_full_name /.*/${if:${buffer_autoset.buffer.${my_full_name}.${my_property}}!=?del:add}/my_action /.*/${if:${my_action}==add? ${my_full_name} ${my_property} 1: ${my_full_name}.${my_property}}/my_params"
toggle_bufautoset.return_code = ok
toggle_property.arguments = "toggle_property"
toggle_property.command = "/toggle_bufautoset ${my_property} ${my_full_name}"
toggle_property.conditions = ""
toggle_property.enabled = on
toggle_property.hook = hsignal
toggle_property.post_action = none
toggle_property.regex = "/.*/${if:${_chat}!=?${_buffer_full_name}:${full_name}}/my_full_name /.*/${if:${_chat}!=?${_buffer_plugin}:${plugin}}/my_plugin /.*/${if:${_chat}!=?${_buffer_localvar_server}:${localvar_server}}/my_server /.*/${buffer[${pointer}].local_variables.script_name}/my_script_name /.*/${if:${_key}==f?${my_plugin}.${if:${my_plugin}==irc||${my_script_name}==matrix||${my_plugin}==matrix?server.}${my_server}:${re:0}}/my_full_name /.*/${_key}/my_property /^button1.*/localvar_set_control_buffer${if:${_bar_name2}==control_buffers2?2}/my_property /(?-i)^c$/localvar_set_control_buffer/my_property /(?-i)^C$/localvar_set_control_buffer2/my_property /(?-i)^n$/localvar_set_no_chanmon_like/my_property /(?-i)^f$/localvar_set_fold/my_property /(?-i)^h$/hidden/my_property"
toggle_property.return_code = ok
translate.arguments = "weechat_print"
translate.command = ""
translate.conditions = "${tg_tags} =~ ,exec_cmd_translated_(text|lang),"
translate.enabled = on
translate.hook = modifier
translate.post_action = none
translate.regex = "/.*/${color:*_31}${if:${tg_tags}=~,exec_cmd_translated_text,?Translation:Language}${color:reset}\t${tg_message_nocolor}/"
translate.return_code = ok
translate_hsignal.arguments = "translate"
translate_hsignal.command = "/command -buffer ${_buffer_full_name} * /exec -norc -name ${my_cmd_suffix}"
translate_hsignal.conditions = ""
translate_hsignal.enabled = on
translate_hsignal.hook = hsignal
translate_hsignal.post_action = none
translate_hsignal.regex = "/.*/${info:spell_dict,${_buffer}}/my_main_spell_dict /,.*//my_main_spell_dict /.*/${env:LANG}/my_env_lang /_.*//my_env_lang /.*/${_buffer_localvar_translate_lang},${if:${_buffer_localvar_type}=~^(channel|private)$?${buffer[${if:${_buffer_plugin}==irc?${info:irc_buffer,${_buffer_localvar_server}}:${info:slack_matrix_server_search,${_buffer}}}].local_variables.translate_lang}},${plugins.var.translate_lang},${my_main_spell_dict},${my_env_lang}/my_lang /.*/${my_lang}/my_debug /^,+//my_lang /([^,]+).*/${re:1}/my_lang /'/'\''/my_lang /.*/${_chat_line_message}/my_chat_line_message /'/'\''/my_chat_line_message /.*/${_chat_word}/my_chat_word /'/'\''/my_chat_word /.*/${if:${_key}==t?translated_text trans -brief -target '${my_lang}' -no-auto '${my_chat_line_message}':${if:${_key}==l?translated_lang trans -brief -no-auto -id '${my_chat_line_message}':translated_dict trans -dictionary -no-auto '${my_chat_word}'}}/my_cmd_suffix"
translate_hsignal.return_code = ok
update_monitors_title_item.arguments = "plugins.var.chanmon.look.*;plugins.var.highmon.look.*;plugins.var.newsmon.look.*"
update_monitors_title_item.command = "/command -buffer core.${my_monitor} * /buffer set title ${my_title} ${my_items}"
update_monitors_title_item.conditions = ""
update_monitors_title_item.enabled = on
update_monitors_title_item.hook = config
update_monitors_title_item.post_action = none
update_monitors_title_item.regex = "/.*/${tg_option}/my_monitor /^plugins.var.([^.]+).*/${re:1}/my_monitor /.*/${if:${my_monitor}==chanmon?Channels Monitor}${if:${my_monitor}==highmon?Highlights Monitor}${if:${my_monitor}==newsmon?News Monitor}/my_title /.*/powerline,Powerline,filtered_lines,Filtered Lines,${if:${my_monitor}==newsmon?keep_url,Keep URL,keep_date,Keep Date:hidden_channels,Hidden Channels},/my_items /([^,]+),([^,]+),/${if:${plugins.var.${my_monitor}.look.${re:1}}!=?${color:default}[${color:bar_fg}${re:2}${color:default}] }/my_items"
update_monitors_title_item.return_code = ok
utils_date_calc_days.arguments = "date_calc_days"
utils_date_calc_days.command = ""
utils_date_calc_days.conditions = "${tg_arguments} =~ ^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])$ && ${info:python_version} !="
utils_date_calc_days.enabled = on
utils_date_calc_days.hook = info
utils_date_calc_days.post_action = none
utils_date_calc_days.regex = "/.*/${info:python_eval,from datetime import datetime; date1 = datetime.today(); date2 = datetime.strptime('${tg_arguments}', '%Y-%m-%d'); delta = date1 - date2; print(abs(delta.days))}/tg_info"
utils_date_calc_days.return_code = ok
utils_date_preferred.arguments = "date_preferred"
utils_date_preferred.command = ""
utils_date_preferred.conditions = "${tg_arguments} =~ ^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])$ && ${info:python_version} !="
utils_date_preferred.enabled = on
utils_date_preferred.hook = info
utils_date_preferred.post_action = none
utils_date_preferred.regex = "/.*/${info:python_eval,from datetime import datetime; print(datetime.strptime('${tg_arguments}', '%Y-%m-%d').strftime('%x'))}/tg_info"
utils_date_preferred.return_code = ok
utils_holiday.arguments = "holiday"
utils_holiday.command = ""
utils_holiday.conditions = "${tg_arguments} =~ ^(0[1-9]|[1-2][0-9]|3[0-1])-(0[1-9]|1[0-2])$"
utils_holiday.enabled = on
utils_holiday.hook = info
utils_holiday.post_action = none
utils_holiday.regex = "/.*/${tg_arguments}/ /01-01/HAPPY NEW YEAR!/ /25-12/MERRY CHRISTMAS!/ /[0-9][0-9]-[0-9][0-9]//"
utils_holiday.return_code = ok
weechat_logo_random_colors.arguments = "5;0;150"
weechat_logo_random_colors.command = "/print -free -newbuffer logo -y 0 ${my_first};/print -free -newbuffer logo -y 1 ${my_second};/print -free -newbuffer logo -y 2 ${my_third};/print -free -newbuffer logo -y 3 ${my_forth};/print -free -newbuffer logo -y 4 ${my_fifth}"
weechat_logo_random_colors.conditions = ""
weechat_logo_random_colors.enabled = on
weechat_logo_random_colors.hook = timer
weechat_logo_random_colors.post_action = none
weechat_logo_random_colors.regex = "===.*===___       __         ______________        _____===my_first ===.*===__ |     / /___________  ____/__  /_______ __  /_===my_second ===.*===__ | /| / /_  _ \  _ \  /    __  __ \  __ `/  __/===my_third ===.*===__ |/ |/ / /  __/  __/ /___  _  / / / /_/ // /_===my_forth ===.*===____/|__/  \___/\___/\____/  /_/ /_/\__,_/ \__/===my_fifth /[^ ]/${color:*${random:0,255}}${re:0}${color:reset}/my_first /[^ ]/${color:*${random:0,255}}${re:0}${color:reset}/my_second /[^ ]/${color:*${random:0,255}}${re:0}${color:reset}/my_third /[^ ]/${color:*${random:0,255}}${re:0}${color:reset}/my_forth /[^ ]/${color:*${random:0,255}}${re:0}${color:reset}/my_fifth"
weechat_logo_random_colors.return_code = ok
